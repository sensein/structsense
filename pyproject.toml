[project]
name = "structsense"
dynamic = ["version", "dependencies"]
description = "structsense is a powerful multi-agent system designed to extract structured information from unstructured data. By orchestrating intelligent agents, it helps you make sense of complex information â€” hence the name structsense. Whether you're working with scientific texts, documents, or messy data, structsense enables you to transform it into meaningful, structured insights."
readme = "README.md"
license = {text = "Apache-2.0"}
authors = [{name = "tekrajchhetri", email = "tekraj@mit.edu"}]
maintainers = [{name = "tekrajchhetri", email = "tekraj@mit.edu"}]
requires-python = ">=3.10,<3.13"
keywords = ["agentic ai", "named entity recognition"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: OS Independent"
]

[project.urls]
homepage = "https://github.com/sensein/ner_framework"
repository = "https://github.com/sensein/ner_framework"
documentation = "https://docs.brainkb.org/"

[project.scripts]
structsense-cli = "structsense.cli:cli"

[tool.poetry]
packages = [
  {include = "structsense", from = "src"},
  {include = "crew", from = "src"},
  {include = "utils", from = "src"}
]
include = [
  "src/structsense/default_config_ner/*.yaml"
]
requires-poetry = ">=2.0"
version = "0.0.0"

[tool.poetry.dependencies]
click = "~=8.2"
grobidarticleextractor = "^0.7.0"
pyyaml = "^6.0.2"
rdflib = "^7.1.3"
pandas = "^2.2.3"
weaviate-client = "^4.11.2"
python-dotenv = "^1.0.1"
crewai = {extras = ["tools"], version = "^0.108.0"}
rich = "^13.9.4"
weave = "^0.51.39"
mlflow = "^2.21.1"
poetry = "^2.1.1"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest-xdist = {version = "~=3.6", extras = ["psutil"]}
pre-commit = "~=4.0"
ruff = "~=0.3"
codespell = "~=2.3"
pytest-cov = "~=6.1"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
pdoc = "~=15.0"

[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["src/tests"]

[tool.ruff]
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv"
]
line-length = 140
indent-width = 4
src = ["src"]
target-version = "py310"

[tool.ruff.lint]
select = []
ignore = []
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"src/tests/**/*.py" = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "pep440"
bump = true
pattern = "default-unprefixed"
format-jinja = "{% if distance == 0 %}{{ base }}{% else %}{{ base }}.dev{{ distance }}{% endif %}"

[build-system]
requires = ["poetry-core>=2.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"

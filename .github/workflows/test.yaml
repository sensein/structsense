name: Python Tests

on:
  push:
    branches:
    - main
  pull_request:
  schedule:
  - cron: 0 6 1 * *

jobs:
  unit:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest] # For demonstration, other OSes are commented out: macos-latest, windows-latest
        python-version: ['3.11', '3.10']
    steps:
    - uses: actions/checkout@v4
      with:  # no need for the history
        fetch-depth: 1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install poetry
      run: pip install poetry==2.1.3
      shell: bash
    # Cache Poetry dependencies to speed up builds
    - name: Cache Poetry virtualenv
      uses: actions/cache@v3
      with:
        path: ~/.cache/pypoetry
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-
    - name: Install dependencies with Poetry
      run: |
        poetry install --with dev
      shell: bash
    - name: Run unit tests
      id: run-tests
      run: >
        poetry run pytest \
          --junitxml=pytest.xml \
          --cov-report=term-missing:skip-covered \
          --cov-report=xml:coverage.xml \
          --cov=src src/tests \
          --log-level=DEBUG \
          --verbose
      shell: bash
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  pre-commit:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.10']
    steps:
    - uses: actions/checkout@v4
      with:  # no need for the history
        fetch-depth: 1
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      run: pip install poetry==2.1.3
      shell: bash
    - name: Install dependencies with Poetry
      run: |
        poetry env use ${{ matrix.python-version }}
        poetry install --with dev
        poetry env info
      shell: bash
    - name: Install pre-commit
      run: pip install pre-commit
      shell: bash
    - name: Run pre-commit
      run: |
        poetry run pre-commit run --all-files
      shell: bash
